{"version":3,"sources":["logo.svg","ForumSubmission.js","Forum.js","Encouragement.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ForumSubmission","Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addBottle","e","preventDefault","fetch","method","headers","Content-Type","body","JSON","stringify","emotion","state","exercise","tags","isPublic","then","res","json","data","console","log","clearState","catch","err","saveBottle","setState","displayMessage","bind","assertThisInitialized","event","field","target","name","value","change","_this2","index","_this3","message","text","_this4","_this5","_this6","react_default","a","createElement","className","id","href","data-toggle","type","checked","onChange","handleChange","htmlFor","handleQuestion","rows","placeholder","aria-label","onClick","disposeBottle","Encouragement","src","App","react_router_dom","react_router","exact","path","component","Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48e792f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n//import './App.css';\r\nimport './ForumSubmission.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Button, Form, FormControl, FormCheck } from 'react-bootstrap';\r\n/* import { Card, CardText, CardBody, CardTitle } from 'reactstrap'; */\r\nimport Forum from './Forum';\r\n//import { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nexport default class ForumSubmission extends Component {\r\n    // Set up a blank title and description input field\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            emotion: \"\",\r\n            exercise: \"\",\r\n            body: [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n            tags: \"\",\r\n            isPublic: true,\r\n        };\r\n\r\n        this.displayMessage = this.displayMessage.bind(this);\r\n\r\n        //this.handleChange = this.handleChange.bind(this);\r\n        //this.postBottle = this.postBottle.bind(this);\r\n    }\r\n\r\n    // Add a method to handle changes to any input element\r\n    handleChange(event) {\r\n        let field = event.target.name;\r\n        let value = event.target.value;\r\n        console.log(field, value);\r\n        let change = {};\r\n        change[field] = value;\r\n        this.setState(change);\r\n    }\r\n\r\n    handleQuestion(event) {\r\n        let index = event.target.name;\r\n        let value = event.target.value;\r\n        console.log(index, value);\r\n        let change = this.state.body;\r\n        change[index] = value;\r\n        this.setState({ body: change }, () => {\r\n            console.log(\"body\", this.state.body);\r\n        });\r\n    }\r\n\r\n    // Function for submit and display the user input message\r\n    displayMessage(event) {\r\n        event.preventDefault();\r\n        let message = {}\r\n        this.setState({\r\n            message: this.state.body\r\n        }\r\n            // }, () => {\r\n            //     console.log(\"message\", this.state.message);\r\n        )\r\n\r\n        fetch(\"https://api.kychiu.me/v1/ocean/ocean\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }).then(res => {\r\n            return res.text();\r\n        }).then((data) => {\r\n\r\n            this.setState({\r\n                message: data\r\n\r\n            })\r\n\r\n        }).catch((err, data) => {\r\n            console.log(err);\r\n            console.log(\"message1\", data);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    // When the user click submit, the value change on title and description \r\n    //onSubmit = e => {\r\n    //    e.preventDefault();\r\n    //    this.props.onSubmit(this.state);\r\n    //    this.setState({\r\n    //        title: \"\",\r\n    //        description: \"\"\r\n    //    })\r\n    //};\r\n    /*\r\n        addBottle() {\r\n            console.log(this.state.isPublic);\r\n            let bottle = {\r\n                emotion: this.state.emotion,\r\n                exercise: this.state.exercise,\r\n                body: this.state.body,\r\n                tags: this.state.tags,\r\n                isPublic: this.state.isPublic,\r\n            }\r\n    \r\n            console.log(bottle);\r\n    \r\n            fetch(\"https://api.kychiu.me/v1/ocean/ocean\", {\r\n                method: \"POST\",\r\n                body: \r\n                    {emotion: this.state.emotion,\r\n                        exercise: this.state.exercise,\r\n                        body: this.state.body,\r\n                        tags: this.state.tags,\r\n                        isPublic: this.state.isPublic\r\n                    }\r\n            }).then(res => {\r\n                return res.json();\r\n            }).then((data) => {\r\n                console.log(\"bottle1\", data);\r\n                this.clearState();\r\n            }).catch((err, data) => {\r\n                console.log(err);\r\n                console.log(\"bottle2\", data);\r\n            });\r\n    \r\n    \r\n            \r\n            //this.cardsRef.push(card);    \r\n        }\r\n    }*/\r\n\r\n    addBottle = (e) => {\r\n        /*console.log(this.state.isPublic);\r\n        let bottle = {\r\n            emotion: this.state.emotion,\r\n            exercise: this.state.exercise,\r\n            body: this.state.body,\r\n            tags: this.state.tags,\r\n            isPublic: this.state.isPublic,\r\n        }*/\r\n\r\n        //console.log(bottle);\r\n        e.preventDefault();\r\n        fetch(\"https://api.kychiu.me/v1/ocean/ocean\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    emotion: this.state.emotion,\r\n                    exercise: this.state.exercise,\r\n                    body: this.state.body,\r\n                    tags: this.state.tags,\r\n                    isPublic: this.state.isPublic\r\n                })\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then((data) => {\r\n            console.log(\"bottle1\", data);\r\n            this.clearState();\r\n        }).catch((err, data) => {\r\n            console.log(err);\r\n            console.log(\"bottle2\", data);\r\n        });\r\n    }\r\n\r\n    clearState() {\r\n        this.setState({\r\n            emotion: \"\",\r\n            exercise: \"\",\r\n            body: [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n            tags: \"\",\r\n            isPublic: \"\"\r\n        }, () => {\r\n            console.log(\"empty\", this.state);\r\n        });\r\n\r\n    }\r\n\r\n    postBottle() {\r\n        //this.setState({type: \"public\"});\r\n        this.setState(\r\n            { isPublic: true },\r\n            () => {\r\n                console.log(\"post\", this.state);\r\n                this.addBottle();\r\n            }\r\n        );\r\n    }\r\n\r\n    saveBottle = (e) => {\r\n        e.preventDefault();\r\n        this.setState(\r\n            { isPublic: false },\r\n            () => {\r\n                console.log(\"save\", this.state);\r\n                //this.addBottle();\r\n                fetch(\"https://api.kychiu.me/v1/ocean/ocean\", {\r\n                    method: \"POST\",\r\n                    body:\r\n                    {\r\n                        emotion: this.state.emotion,\r\n                        exercise: this.state.exercise,\r\n                        body: this.state.body,\r\n                        tags: this.state.tags,\r\n                        isPublic: this.state.isPublic\r\n                    }\r\n                }).then(res => {\r\n                    return res.json();\r\n                }).then((data) => {\r\n                    console.log(\"bottle1\", data);\r\n                    this.clearState();\r\n                }).catch((err, data) => {\r\n                    console.log(err);\r\n                    console.log(\"bottle2\", data);\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    disposeBottle() {\r\n        this.clearState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n\r\n            <div className=\"container\" id=\"exercise\">\r\n                <div id=\"nav-links\">\r\n                    <a href=\"./\">Home</a> | <a href=\"./processing\">Emotional Processing</a> | <a href=\"./encourage\">Encouragement</a>\r\n                </div>\r\n\r\n                <section id=\"child\">\r\n                    <div className=\"intro\">\r\n\r\n\r\n                        <h1>New Bottle</h1>\r\n\r\n                        <div id=\"description\">\r\n                            <br />\r\n                            <p>Go through the following exercise to sort out what's on your mind</p>\r\n                            <p>You are free to go at your own pace and skip any questions you want</p>\r\n                            <br />\r\n                            <br />\r\n                            <p>Scroll or Swipe Down to Continue</p>\r\n                            <h2>↓</h2>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </section>\r\n                <form>\r\n                    <section id=\"child\">\r\n                        <label>(1/7) How are you feeling right now?</label>\r\n                        <br />\r\n                        <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\r\n                            <label className=\"btn btn-secondary\">\r\n                                <input type=\"radio\"\r\n                                    name=\"emotion\"\r\n                                    value=\"+2\"\r\n                                    checked={this.state.emotion === \"+2\"}\r\n                                    onChange={(event) => { this.handleChange(event) }}\r\n                                />\r\n                                Great\r\n                        </label>\r\n                            <label className=\"btn btn-secondary\">\r\n                                <input type=\"radio\"\r\n                                    name=\"emotion\"\r\n                                    value=\"+1\"\r\n                                    checked={this.state.emotion === \"+1\"}\r\n                                    onChange={(event) => { this.handleChange(event) }}\r\n                                />\r\n                                Good\r\n                        </label>\r\n                            <label className=\"btn btn-secondary\">\r\n                                <input type=\"radio\"\r\n                                    name=\"emotion\"\r\n                                    value=\"0\"\r\n                                    checked={this.state.emotion === \"0\"}\r\n                                    onChange={(event) => { this.handleChange(event) }}\r\n                                />\r\n                                Okay\r\n                        </label>\r\n                            <label className=\"btn btn-secondary\">\r\n                                <input type=\"radio\"\r\n                                    name=\"emotion\"\r\n                                    value=\"-1\"\r\n                                    checked={this.state.emotion === \"-1\"}\r\n                                    onChange={(event) => { this.handleChange(event) }}\r\n                                />\r\n                                Bad\r\n                        </label>\r\n                            <label className=\"btn btn-secondary\">\r\n                                <input type=\"radio\"\r\n                                    name=\"emotion\"\r\n                                    value=\"-2\"\r\n                                    checked={this.state.emotion === \"-2\"}\r\n                                    onChange={(event) => { this.handleChange(event) }}\r\n                                />\r\n                                Awful\r\n                        </label>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section id=\"child\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleFormControlTextarea1\">(2/7) What happened?</label>\r\n                            <textarea className=\"form-control\"\r\n                                name=\"0\"\r\n                                value={this.state.body[0]}\r\n                                onChange={(event) => { this.handleQuestion(event) }}\r\n                                id=\"exampleFormControlTextarea1\"\r\n                                rows=\"3\"\r\n                                placeholder=\"Write about something on your mind (for example: I failed my exam) ...\"\r\n                                aria-label=\"some description texts\">\r\n                            </textarea>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section id=\"child\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleFormControlTextarea1\">(3/7) Could the situation be worse than it is? And how so?</label>\r\n                            <textarea className=\"form-control\"\r\n                                name=\"2\"\r\n                                value={this.state.body[2]}\r\n                                onChange={(event) => { this.handleQuestion(event) }}\r\n                                id=\"exampleFormControlTextarea1\"\r\n                                rows=\"3\"\r\n                                placeholder=\"Think about what could be the worse case scenario for your situation (i.e. I slept through my exam) ...\"\r\n                                aria-label=\"some description texts\">\r\n                            </textarea>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section id=\"child\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleFormControlTextarea1\"> (4/7) What are some factors that contributed to the situation?</label>\r\n                            <textarea className=\"form-control\"\r\n                                name=\"3\"\r\n                                value={this.state.body[3]}\r\n                                onChange={(event) => { this.handleQuestion(event) }}\r\n                                id=\"exampleFormControlTextarea1\"\r\n                                rows=\"3\"\r\n                                placeholder=\"There may be outside factors to consider that have you feel this way (i.e. I didn't get enough sleep)\"\r\n                                aria-label=\"some description texts\">\r\n\r\n                            </textarea>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section id=\"child\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleFormControlTextarea1\"> (5/7) What factors in the situation are in your control?</label>\r\n                            <textarea className=\"form-control\"\r\n                                name=\"4\"\r\n                                value={this.state.body[4]}\r\n                                onChange={(event) => { this.handleQuestion(event) }}\r\n                                id=\"exampleFormControlTextarea1\"\r\n                                rows=\"3\"\r\n                                placeholder=\"Think about the things you put for the previous prompt and which of those things you can address\"\r\n                                aria-label=\"some description texts\">\r\n                            </textarea>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section id=\"child\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleFormControlTextarea1\"> (6/7) Can you brainstorm solutions you can do to address your situation?</label>\r\n                            <textarea className=\"form-control\"\r\n                                name=\"5\"\r\n                                value={this.state.body[5]}\r\n                                onChange={(event) => { this.handleQuestion(event) }}\r\n                                id=\"exampleFormControlTextarea1\"\r\n                                rows=\"3\"\r\n                                placeholder=\"Think of some resources you can use or actions you can do\"\r\n                                aria-label=\"some description texts\">\r\n                            </textarea>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section id=\"child\">\r\n                        <br />\r\n                        <p> [ ** Will add a Mindfulness exercise ** ]</p>\r\n                        <br />\r\n                    </section>\r\n\r\n                    <section id=\"child\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleFormControlTextarea1\"> (7/7) How do you feel now?</label>\r\n                            <textarea className=\"form-control\"\r\n                                name=\"6\"\r\n                                value={this.state.body[6]}\r\n                                onChange={(event) => { this.handleQuestion(event) }}\r\n                                id=\"exampleFormControlTextarea1\"\r\n                                rows=\"3\"\r\n                                aria-label=\"some description texts\">\r\n                            </textarea>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"formGroupExampleInput\">Tags</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name=\"tags\"\r\n                                value={this.state.tags}\r\n                                onChange={(event) => { this.handleChange(event) }}\r\n                                id=\"formGroupExampleInput\"\r\n                                placeholder=\"Tags for your bottle\"\r\n                                aria-label=\"Tags for your bottle\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div id=\"buttons\">\r\n                            <button className=\"btn btn-primary mr-2\" onClick={(e) => this.addBottle(e)}>\r\n                                Make Public\r\n                         </button>\r\n                            <button className=\"btn btn-primary mr-2\" onClick={(e) => this.saveBottle(e)}>\r\n                                Only I Can See\r\n                         </button>\r\n                            <button className=\"btn btn-primary mr-2\" onClick={() => this.disposeBottle()}>\r\n                                Dispose\r\n                        </button>\r\n                        </div>\r\n                    </section>\r\n                </form>\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Button, Form, FormControl, FormCheck } from 'react-bootstrap';\r\nimport { Card, CardText, CardBody, CardTitle } from 'reactstrap';\r\nimport ForumSubmission from './ForumSubmission';\r\n\r\nexport default class Forum extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    displayMessage(event) {\r\n        event.preventDefault();\r\n\r\n        console.log(\"message\", this.state.message);\r\n\r\n        fetch(\"https://api.kychiu.me/v1/ocean/ocean\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then((data) => {\r\n            this.setState({\r\n                message: data\r\n            })\r\n        }).catch((err, data) => {\r\n            console.log(err);\r\n            console.log(\"message\", data);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card body inverse style={{ backgroundColor: '#b3d2e5' }}>\r\n                    <CardBody ref={message => this.state.message = message}>\r\n                        Here's your process of emotion:\r\n    \r\n                        {this.state.message}\r\n\r\n                    </CardBody>\r\n                </Card>\r\n\r\n                <form onSubmit={this.displayMessage}>\r\n                    <button className=\"btn btn-primary mr-2\">\r\n                        Okay\r\n                    </button>\r\n                </form>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Encouragement.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Button, Form, FormControl, FormCheck } from 'react-bootstrap';\r\nimport { Card, CardText, CardBody, CardTitle } from 'reactstrap';\r\nimport Forum from './Forum';\r\n//import { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nexport default class Encouragement extends Component {\r\n    // Set up a blank title and description input field\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            emotion: \"\",\r\n            exercise: \"\",\r\n            body: [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n            tags: \"\",\r\n            isPublic: true,\r\n        };\r\n\r\n        this.displayMessage = this.displayMessage.bind(this);\r\n\r\n        //this.handleChange = this.handleChange.bind(this);\r\n        //this.postBottle = this.postBottle.bind(this);\r\n    }\r\n\r\n    // Add a method to handle changes to any input element\r\n    handleChange(event) {\r\n        let field = event.target.name;\r\n        let value = event.target.value;\r\n        console.log(field, value);\r\n        let change = {};\r\n        change[field] = value;\r\n        this.setState(change);\r\n    }\r\n\r\n    handleQuestion(event) {\r\n        let index = event.target.name;\r\n        let value = event.target.value;\r\n        console.log(index, value);\r\n        let change = this.state.body;\r\n        change[index] = value;\r\n        this.setState({ body: change }, () => {\r\n            console.log(\"body\", this.state.body);\r\n        });\r\n    }\r\n\r\n    // Function for submit and display the user input message\r\n    displayMessage(event) {\r\n        event.preventDefault();\r\n        let message = {}\r\n        this.setState({\r\n            message: this.state.body\r\n        }\r\n            // }, () => {\r\n            //     console.log(\"message\", this.state.message);\r\n        )\r\n\r\n        fetch(\"https://api.kychiu.me/v1/ocean/ocean\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }).then(res => {\r\n            return res.text();\r\n        }).then((data) => {\r\n\r\n            this.setState({\r\n                message: data\r\n\r\n            })\r\n\r\n        }).catch((err, data) => {\r\n            console.log(err);\r\n            console.log(\"message1\", data);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    // When the user click submit, the value change on title and description \r\n    //onSubmit = e => {\r\n    //    e.preventDefault();\r\n    //    this.props.onSubmit(this.state);\r\n    //    this.setState({\r\n    //        title: \"\",\r\n    //        description: \"\"\r\n    //    })\r\n    //};\r\n    /*\r\n        addBottle() {\r\n            console.log(this.state.isPublic);\r\n            let bottle = {\r\n                emotion: this.state.emotion,\r\n                exercise: this.state.exercise,\r\n                body: this.state.body,\r\n                tags: this.state.tags,\r\n                isPublic: this.state.isPublic,\r\n            }\r\n    \r\n            console.log(bottle);\r\n    \r\n            fetch(\"https://api.kychiu.me/v1/ocean/ocean\", {\r\n                method: \"POST\",\r\n                body: \r\n                    {emotion: this.state.emotion,\r\n                        exercise: this.state.exercise,\r\n                        body: this.state.body,\r\n                        tags: this.state.tags,\r\n                        isPublic: this.state.isPublic\r\n                    }\r\n            }).then(res => {\r\n                return res.json();\r\n            }).then((data) => {\r\n                console.log(\"bottle1\", data);\r\n                this.clearState();\r\n            }).catch((err, data) => {\r\n                console.log(err);\r\n                console.log(\"bottle2\", data);\r\n            });\r\n    \r\n    \r\n            \r\n            //this.cardsRef.push(card);    \r\n        }\r\n    }*/\r\n\r\n    addBottle = (e) => {\r\n        /*console.log(this.state.isPublic);\r\n        let bottle = {\r\n            emotion: this.state.emotion,\r\n            exercise: this.state.exercise,\r\n            body: this.state.body,\r\n            tags: this.state.tags,\r\n            isPublic: this.state.isPublic,\r\n        }*/\r\n\r\n        //console.log(bottle);\r\n        e.preventDefault();\r\n        fetch(\"https://api.kychiu.me/v1/ocean/ocean\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    emotion: this.state.emotion,\r\n                    exercise: this.state.exercise,\r\n                    body: this.state.body,\r\n                    tags: this.state.tags,\r\n                    isPublic: this.state.isPublic\r\n                })\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then((data) => {\r\n            console.log(\"bottle1\", data);\r\n            this.clearState();\r\n        }).catch((err, data) => {\r\n            console.log(err);\r\n            console.log(\"bottle2\", data);\r\n        });\r\n    }\r\n\r\n    clearState() {\r\n        this.setState({\r\n            emotion: \"\",\r\n            exercise: \"\",\r\n            body: [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n            tags: \"\",\r\n            isPublic: \"\"\r\n        }, () => {\r\n            console.log(\"empty\", this.state);\r\n        });\r\n\r\n    }\r\n\r\n    postBottle() {\r\n        //this.setState({type: \"public\"});\r\n        this.setState(\r\n            { isPublic: true },\r\n            () => {\r\n                console.log(\"post\", this.state);\r\n                this.addBottle();\r\n            }\r\n        );\r\n    }\r\n\r\n    saveBottle = (e) => {\r\n        e.preventDefault();\r\n        this.setState(\r\n            { isPublic: false },\r\n            () => {\r\n                console.log(\"save\", this.state);\r\n                //this.addBottle();\r\n                fetch(\"https://api.kychiu.me/v1/ocean/ocean\", {\r\n                    method: \"POST\",\r\n                    body:\r\n                    {\r\n                        emotion: this.state.emotion,\r\n                        exercise: this.state.exercise,\r\n                        body: this.state.body,\r\n                        tags: this.state.tags,\r\n                        isPublic: this.state.isPublic\r\n                    }\r\n                }).then(res => {\r\n                    return res.json();\r\n                }).then((data) => {\r\n                    console.log(\"bottle1\", data);\r\n                    this.clearState();\r\n                }).catch((err, data) => {\r\n                    console.log(err);\r\n                    console.log(\"bottle2\", data);\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    disposeBottle() {\r\n        this.clearState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div id=\"nav-links\">\r\n                    <a href=\"./\">Home</a> | <a href=\"./processing\">Emotional Processing</a> | <a href=\"./encourage\">Encouragement</a>\r\n                </div>\r\n\r\n                <div className=\"intro\">\r\n                    <h1>Encouraging Bottle</h1>\r\n\r\n                    <div id=\"description\">\r\n                        <p>Share an encouraging message. It can be advice, a resource, a personal experience, or words of comfort</p>\r\n\r\n                        <div id=\"guide\">\r\n                            Be empathetic<br />\r\n                            Acknowledge, but not minimize, other's emotions<br />\r\n                            Don't feel pressure to have to talk<br />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <form>\r\n\r\n                    {/*<div id=\"section\">\r\n                        <label >How are you feeling right now?</label>\r\n                        <br />\r\n                        <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\r\n                            <label className=\"btn btn-secondary\">\r\n                                <input type=\"radio\"\r\n                                    name=\"emotion\"\r\n                                    value=\"+2\"\r\n                                    checked={this.state.emotion === \"+2\"}\r\n                                    onChange={(event) => { this.handleChange(event) }}\r\n                                />\r\n                                Great\r\n                        </label>\r\n                            <label className=\"btn btn-secondary\">\r\n                                <input type=\"radio\"\r\n                                    name=\"emotion\"\r\n                                    value=\"+1\"\r\n                                    checked={this.state.emotion === \"+1\"}\r\n                                    onChange={(event) => { this.handleChange(event) }}\r\n                                />\r\n                                Good\r\n                        </label>\r\n                            <label className=\"btn btn-secondary\">\r\n                                <input type=\"radio\"\r\n                                    name=\"emotion\"\r\n                                    value=\"0\"\r\n                                    checked={this.state.emotion === \"0\"}\r\n                                    onChange={(event) => { this.handleChange(event) }}\r\n                                />\r\n                                Okay\r\n                        </label>\r\n                            <label className=\"btn btn-secondary\">\r\n                                <input type=\"radio\"\r\n                                    name=\"emotion\"\r\n                                    value=\"-1\"\r\n                                    checked={this.state.emotion === \"-1\"}\r\n                                    onChange={(event) => { this.handleChange(event) }}\r\n                                />\r\n                                Bad\r\n                        </label>\r\n                            <label className=\"btn btn-secondary\">\r\n                                <input type=\"radio\"\r\n                                    name=\"emotion\"\r\n                                    value=\"-2\"\r\n                                    checked={this.state.emotion === \"-2\"}\r\n                                    onChange={(event) => { this.handleChange(event) }}\r\n                                />\r\n                                Awful\r\n                        </label>\r\n                        </div>\r\n                    </div>*/}\r\n\r\n                    <div id=\"section\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleFormControlTextarea1\">Write some Encouragement</label>\r\n                            <textarea className=\"form-control\"\r\n                                name=\"0\"\r\n                                value={this.state.body[0]}\r\n                                onChange={(event) => { this.handleQuestion(event) }}\r\n                                id=\"exampleFormControlTextarea1\"\r\n                                rows=\"3\"\r\n                                placeholder=\"Write something here...\"\r\n                                aria-label=\"some description texts\">\r\n                            </textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div id=\"section\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"formGroupExampleInput\">Tags</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name=\"tags\"\r\n                                value={this.state.tags}\r\n                                onChange={(event) => { this.handleChange(event) }}\r\n                                id=\"formGroupExampleInput\"\r\n                                placeholder=\"Tag your bottle...\"\r\n                                aria-label=\"Tag your bottle\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <button className=\"btn btn-primary mr-2\" onClick={(e) => this.addBottle(e)}>\r\n                    Public\r\n                </button>\r\n                <button className=\"btn btn-primary mr-2\" onClick={(e) => this.saveBottle(e)}>\r\n                    Only I Can See\r\n                </button>\r\n                <button className=\"btn btn-primary mr-2\" onClick={() => this.disposeBottle()}>\r\n                    Dispose\r\n                </button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\n//import { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nexport default class Encouragement extends Component {\r\n    // Set up a blank title and description input field\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div id=\"front\">\r\n                    <a href=\"./\">\r\n                        <img src=\"drifting-logo.jpg\" className=\"drifting-logo\" /></a>\r\n                    <br />\r\n\r\n                    <div id=\"nav-link\">\r\n                        <a href=\"./processing\">Emotional Processing </a> | <a href=\"./encourage\">Encourage</a>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Navbar, Nav, NavItem, MenuItem, NavDropdown, Button, Form, FormControl, Container, Image } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n\r\nimport ForumSubmission from \"./ForumSubmission\";\r\nimport Encouragement from \"./Encouragement\";\r\nimport Forum from \"./Forum\";\r\nimport Home from \"./Home\";\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n        <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/processing\" component={ForumSubmission} />\r\n          <Route path=\"/encourage\" component={Encouragement} />\r\n\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\n          <Route exact path=\"/\" render={() => <Home />} />\r\n          <Route path=\"/processing\" render={() => <ForumSubmission />} />\r\n          <Route path=\"/encourage\" render={() => <Encouragement />} />*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}